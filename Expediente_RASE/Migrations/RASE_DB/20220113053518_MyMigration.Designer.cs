// <auto-generated />
using System;
using Expediente_RASE.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Expediente_RASE.Migrations.RASE_DB
{
    [DbContext(typeof(RASE_DBContext))]
    [Migration("20220113053518_MyMigration")]
    partial class MyMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Expediente_RASE.Models.AntAler", b =>
                {
                    b.Property<string>("DescAler")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("DESC_ALER");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("RegAler")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("REG_ALER")
                        .IsFixedLength(true);

                    b.HasIndex("IdPac");

                    b.ToTable("ANT_ALER");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntHer", b =>
                {
                    b.Property<string>("AnHer")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("AN_HER")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("IdAnt")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANT");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("RegHer")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("REG_HER")
                        .IsFixedLength(true);

                    b.HasIndex("IdAnt");

                    b.HasIndex("IdPac");

                    b.ToTable("ANT_HER");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntNoPat", b =>
                {
                    b.Property<string>("AnNPat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("AN_N_PAT")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("IdAnt")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANT");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("RegNPat")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("REG_N_PAT")
                        .IsFixedLength(true);

                    b.HasIndex("IdAnt");

                    b.HasIndex("IdPac");

                    b.ToTable("ANT_NO_PAT");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntOb", b =>
                {
                    b.Property<string>("AnPsi")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("AN_PSI")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("IdAnt")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANT");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.HasIndex("IdAnt");

                    b.HasIndex("IdPac");

                    b.ToTable("ANT_OBS");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntPat", b =>
                {
                    b.Property<string>("AnPat")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("AN_PAT")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("IdAnt")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANT");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("RegPat")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("REG_PAT")
                        .IsFixedLength(true);

                    b.HasIndex("IdAnt");

                    b.HasIndex("IdPac");

                    b.ToTable("ANT_PAT");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntPsi", b =>
                {
                    b.Property<string>("AnPsi")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("AN_PSI")
                        .HasDefaultValueSql("('')");

                    b.Property<int?>("IdAnt")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANT");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("RegPsi")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("REG_PSI")
                        .IsFixedLength(true);

                    b.HasIndex("IdAnt");

                    b.HasIndex("IdPac");

                    b.ToTable("ANT_PSI");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntQui", b =>
                {
                    b.Property<int?>("EdadQ")
                        .HasColumnType("int")
                        .HasColumnName("EDAD_Q");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("RegQui")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("REG_QUI")
                        .IsFixedLength(true);

                    b.Property<string>("TipoQ")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("TIPO_Q");

                    b.HasIndex("IdPac");

                    b.ToTable("ANT_QUI");
                });

            modelBuilder.Entity("Expediente_RASE.Models.CAnt", b =>
                {
                    b.Property<int>("IdAnt")
                        .HasColumnType("int")
                        .HasColumnName("ID_ANT");

                    b.Property<string>("NAnt")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("N_ANT");

                    b.HasKey("IdAnt")
                        .HasName("PK__C_ANT__2A7D64511DB60CCE");

                    b.ToTable("C_ANT");
                });

            modelBuilder.Entity("Expediente_RASE.Models.CEsp", b =>
                {
                    b.Property<int>("IdEsp")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESP");

                    b.Property<string>("NEsp")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("N_ESP");

                    b.HasKey("IdEsp")
                        .HasName("PK__C_ESP__2D4DED3728CEB3FB");

                    b.ToTable("C_ESP");
                });

            modelBuilder.Entity("Expediente_RASE.Models.CSuc", b =>
                {
                    b.Property<int>("IdSuc")
                        .HasColumnType("int")
                        .HasColumnName("ID_SUC");

                    b.Property<string>("DirSuc")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("DIR_SUC");

                    b.Property<string>("NomSuc")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOM_SUC");

                    b.HasKey("IdSuc")
                        .HasName("PK__C_SUC__27F99A817495928B");

                    b.ToTable("C_SUC");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TConsultum", b =>
                {
                    b.Property<int>("IdCon")
                        .HasColumnType("int")
                        .HasColumnName("ID_CON");

                    b.Property<string>("Diagnostico")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("DIAGNOSTICO");

                    b.Property<double?>("Estatura")
                        .HasColumnType("float")
                        .HasColumnName("ESTATURA");

                    b.Property<DateTime?>("FechaCon")
                        .HasColumnType("date")
                        .HasColumnName("FECHA_CON");

                    b.Property<int?>("FrecCar")
                        .HasColumnType("int")
                        .HasColumnName("FREC_CAR");

                    b.Property<int?>("FrecResp")
                        .HasColumnType("int")
                        .HasColumnName("FREC_RESP");

                    b.Property<int?>("GrasaCorp")
                        .HasColumnType("int")
                        .HasColumnName("GRASA_CORP");

                    b.Property<int?>("IdDoc")
                        .HasColumnType("int")
                        .HasColumnName("ID_DOC");

                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<int?>("IdSuc")
                        .HasColumnType("int")
                        .HasColumnName("ID_SUC");

                    b.Property<double?>("MasaCorp")
                        .HasColumnType("float")
                        .HasColumnName("MASA_CORP");

                    b.Property<int?>("MasaMusc")
                        .HasColumnType("int")
                        .HasColumnName("MASA_MUSC");

                    b.Property<string>("Motivo")
                        .HasMaxLength(90)
                        .IsUnicode(false)
                        .HasColumnType("varchar(90)")
                        .HasColumnName("MOTIVO");

                    b.Property<double?>("Peso")
                        .HasColumnType("float")
                        .HasColumnName("PESO");

                    b.Property<int?>("PresArt")
                        .HasColumnType("int")
                        .HasColumnName("PRES_ART");

                    b.Property<int?>("SatOxigeno")
                        .HasColumnType("int")
                        .HasColumnName("SAT_OXIGENO");

                    b.Property<double?>("Temperatura")
                        .HasColumnType("float")
                        .HasColumnName("TEMPERATURA");

                    b.HasKey("IdCon")
                        .HasName("PK__T_CONSUL__2BF968CCB382FC5C");

                    b.HasIndex("IdDoc");

                    b.HasIndex("IdPac");

                    b.HasIndex("IdSuc");

                    b.ToTable("T_CONSULTA");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TDoctore", b =>
                {
                    b.Property<int>("IdDoc")
                        .HasColumnType("int")
                        .HasColumnName("ID_DOC");

                    b.Property<string>("ApMatDoc")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("AP_MAT_DOC");

                    b.Property<string>("ApPatDoc")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("AP_PAT_DOC");

                    b.Property<string>("CedP")
                        .HasMaxLength(8)
                        .IsUnicode(false)
                        .HasColumnType("varchar(8)")
                        .HasColumnName("CED_P");

                    b.Property<string>("CorreoDoc")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREO_DOC");

                    b.Property<string>("CurpDoc")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("CURP_DOC");

                    b.Property<int?>("IdEsp")
                        .HasColumnType("int")
                        .HasColumnName("ID_ESP");

                    b.Property<string>("NomDoc")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NOM_DOC");

                    b.Property<int?>("RecDis")
                        .HasColumnType("int")
                        .HasColumnName("REC_DIS");

                    b.Property<string>("TelDoc")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TEL_DOC");

                    b.HasKey("IdDoc")
                        .HasName("PK__T_DOCTOR__2BBF72881D2877F3");

                    b.HasIndex("IdEsp");

                    b.ToTable("T_DOCTORES");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TInsMed", b =>
                {
                    b.Property<string>("Duracion")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("DURACION");

                    b.Property<string>("Frecuencia")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("FRECUENCIA");

                    b.Property<int?>("IdCon")
                        .HasColumnType("int")
                        .HasColumnName("ID_CON");

                    b.Property<int?>("IdMed")
                        .HasColumnType("int")
                        .HasColumnName("ID_MED");

                    b.Property<string>("Indicaciones")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("INDICACIONES");

                    b.Property<string>("NotasIns")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOTAS_INS");

                    b.HasIndex("IdCon");

                    b.HasIndex("IdMed");

                    b.ToTable("T_INS_MED");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TMedicina", b =>
                {
                    b.Property<int>("IdMed")
                        .HasColumnType("int")
                        .HasColumnName("ID_MED");

                    b.Property<string>("DescMed")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("DESC_MED");

                    b.Property<string>("NomMed")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("NOM_MED");

                    b.HasKey("IdMed")
                        .HasName("PK__T_MEDICI__276D18CB4F407F07");

                    b.ToTable("T_MEDICINA");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TPac", b =>
                {
                    b.Property<int>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("ApMatPac")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("AP_MAT_PAC");

                    b.Property<string>("ApPatPac")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("AP_PAT_PAC");

                    b.Property<string>("ArchPac")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("ARCH_PAC")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CorreoPac")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREO_PAC")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("CurpPac")
                        .HasMaxLength(18)
                        .IsUnicode(false)
                        .HasColumnType("varchar(18)")
                        .HasColumnName("CURP_PAC");

                    b.Property<string>("EstCivPac")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EST_CIV_PAC");

                    b.Property<DateTime?>("FecNacPac")
                        .HasColumnType("date")
                        .HasColumnName("FEC_NAC_PAC");

                    b.Property<string>("NomPac")
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NOM_PAC");

                    b.Property<string>("NotasPac")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOTAS_PAC")
                        .HasDefaultValueSql("('')");

                    b.Property<string>("OcupacionPac")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("OCUPACION_PAC");

                    b.Property<string>("SexoPac")
                        .HasMaxLength(9)
                        .IsUnicode(false)
                        .HasColumnType("varchar(9)")
                        .HasColumnName("SEXO_PAC");

                    b.Property<string>("TSangrePac")
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .HasColumnName("T_SANGRE_PAC")
                        .IsFixedLength(true);

                    b.Property<string>("TelPac")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("TEL_PAC");

                    b.HasKey("IdPac")
                        .HasName("PK__T_PAC__20AF02C4A64BECF8");

                    b.ToTable("T_PAC");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TUsuario", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnType("int")
                        .HasColumnName("ID_USER");

                    b.Property<string>("CargoU")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("CARGO_U");

                    b.Property<string>("ContraU")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("CONTRA_U");

                    b.Property<string>("CorreoU")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("CORREO_U");

                    b.HasKey("IdUser")
                        .HasName("PK__T_USUARI__95F48440E94A473D");

                    b.ToTable("T_USUARIOS");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TratActivo", b =>
                {
                    b.Property<int?>("IdPac")
                        .HasColumnType("int")
                        .HasColumnName("ID_PAC");

                    b.Property<string>("Medic")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("MEDIC");

                    b.Property<string>("TipoTrat")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("TIPO_TRAT");

                    b.HasIndex("IdPac");

                    b.ToTable("TRAT_ACTIVO");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntAler", b =>
                {
                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_ANT_ALER");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntHer", b =>
                {
                    b.HasOne("Expediente_RASE.Models.CAnt", "IdAntNavigation")
                        .WithMany()
                        .HasForeignKey("IdAnt")
                        .HasConstraintName("FK_ID_ANT_HER");

                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_ANT_HER");

                    b.Navigation("IdAntNavigation");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntNoPat", b =>
                {
                    b.HasOne("Expediente_RASE.Models.CAnt", "IdAntNavigation")
                        .WithMany()
                        .HasForeignKey("IdAnt")
                        .HasConstraintName("FK_ID_ANT_N_PAT");

                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_ANT_N_PAT");

                    b.Navigation("IdAntNavigation");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntOb", b =>
                {
                    b.HasOne("Expediente_RASE.Models.CAnt", "IdAntNavigation")
                        .WithMany()
                        .HasForeignKey("IdAnt")
                        .HasConstraintName("FK_ID_ANT_OBS");

                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_ANT_OBS");

                    b.Navigation("IdAntNavigation");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntPat", b =>
                {
                    b.HasOne("Expediente_RASE.Models.CAnt", "IdAntNavigation")
                        .WithMany()
                        .HasForeignKey("IdAnt")
                        .HasConstraintName("FK_ID_ANT_PAT");

                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_ANT_PAT");

                    b.Navigation("IdAntNavigation");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntPsi", b =>
                {
                    b.HasOne("Expediente_RASE.Models.CAnt", "IdAntNavigation")
                        .WithMany()
                        .HasForeignKey("IdAnt")
                        .HasConstraintName("FK_ID_ANT_PSI");

                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_ANT_PSI");

                    b.Navigation("IdAntNavigation");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.AntQui", b =>
                {
                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_ANT_QUI");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TConsultum", b =>
                {
                    b.HasOne("Expediente_RASE.Models.TDoctore", "IdDocNavigation")
                        .WithMany("TConsulta")
                        .HasForeignKey("IdDoc")
                        .HasConstraintName("FK_ID_DOC");

                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany("TConsulta")
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC");

                    b.HasOne("Expediente_RASE.Models.CSuc", "IdSucNavigation")
                        .WithMany("TConsulta")
                        .HasForeignKey("IdSuc")
                        .HasConstraintName("FK_ID_SUC");

                    b.Navigation("IdDocNavigation");

                    b.Navigation("IdPacNavigation");

                    b.Navigation("IdSucNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TDoctore", b =>
                {
                    b.HasOne("Expediente_RASE.Models.CEsp", "IdEspNavigation")
                        .WithMany("TDoctores")
                        .HasForeignKey("IdEsp")
                        .HasConstraintName("FK_ID_ESP");

                    b.Navigation("IdEspNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TInsMed", b =>
                {
                    b.HasOne("Expediente_RASE.Models.TConsultum", "IdConNavigation")
                        .WithMany()
                        .HasForeignKey("IdCon")
                        .HasConstraintName("FK_ID_CON");

                    b.HasOne("Expediente_RASE.Models.TMedicina", "IdMedNavigation")
                        .WithMany()
                        .HasForeignKey("IdMed")
                        .HasConstraintName("FK_ID_MED");

                    b.Navigation("IdConNavigation");

                    b.Navigation("IdMedNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TratActivo", b =>
                {
                    b.HasOne("Expediente_RASE.Models.TPac", "IdPacNavigation")
                        .WithMany()
                        .HasForeignKey("IdPac")
                        .HasConstraintName("FK_ID_PAC_TRAT_ACT");

                    b.Navigation("IdPacNavigation");
                });

            modelBuilder.Entity("Expediente_RASE.Models.CEsp", b =>
                {
                    b.Navigation("TDoctores");
                });

            modelBuilder.Entity("Expediente_RASE.Models.CSuc", b =>
                {
                    b.Navigation("TConsulta");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TDoctore", b =>
                {
                    b.Navigation("TConsulta");
                });

            modelBuilder.Entity("Expediente_RASE.Models.TPac", b =>
                {
                    b.Navigation("TConsulta");
                });
#pragma warning restore 612, 618
        }
    }
}
